#!/usr/bin/env pinpoint

[font=Sans 100px]
#[text-color=black]
[text-align=center]
--

Créer une application:

le guide incomplet…
mais pratique quand même

--
À la base de chaque application :

-- [idea.jpg][fill][top-left]
idée
-- [conception.jpg][fill][left]
conception
-- [source-code.jpg][fill][top-right]
implémentation
-- [text-align=left]
<tt>#include &lt;stdio.h&gt;

int main (int argc, char *argv[])
{
    printf ("Hello, World !");
    return 0;
}</tt>

-- [font=monospace 100px][text-align=left]
./hello-world
Hello, World !
-- [money.jpg][fill]
profit !
--
Simpl(ist)e, et pourtant...
--
Pour créer, il faut
des <span foreground="red">outils</span>
--
Outils utilisés à ce stade :
-- [text-align=left][toolbox.png][bottom]
• éditeur de texte
• langage de programmation
• compilateur
• système d'exploitation
--
Choix implicites :
-- [text-align=left]
1. plateforme favorite ♥ 
2. éditeur de texte favori ♥
3. langage favori ♥
4. compilateur/interpréteur ♥
--
Quelques questions
à se poser
<span foreground="red">avant</span> de commencer
--
<span foreground="red">Quelle plate-forme(s) logicielle(s) ?</span>

Windows ? GNU/Linux ? macOS ?
iOS ? Android ? …
Navigateur Web ?
--
<span foreground="red">Quelle version(s) ?</span>

Windows 10 ? Fedora 25 ? …
--
<span foreground="red">Quelle plate-forme(s) matérielle(s) ?</span>

x86 ? ARM ? …
--
<span foreground="red">Quel langage… pour quel usage ?</span>

contraintes différentes → choix différents

portabilité
performance
maintenance
écosystème
--
<span foreground="red">Quel langage… compilé ?</span>

C, C++, Java, …
--
<span foreground="red">Quel langage… interprété ?</span>

javascript, python, perl, …
--
<span foreground="red">Cible différente de l'hôte ?</span>

→ compilation croisée
<i>(si utilisation d'un langage compilé)</i>
--
<span foreground="red">Quelle version de standard ?</span>

<span foreground="red">C++</span>: C++98, C+03, C++11
<span foreground="red">C</span>: C89, C99, C11
<span foreground="red">Python</span>: 2.7, 3.x
--
etc.
--
<span foreground="red"><big>« Il est tentant, quand on n'a
pour seul outil un marteau,
de tout traiter comme un clou »</big></span>


<small>Abraham Maslow
The Psychology of Science:
A Reconnaissance
(1966)</small>
-- [toolbox.png][fill][bottom]
Trouvez <i>vos</i> outils
-- [troll.jpg][bottom]
30 langages = 30 marteaux
-- [keyboard.jpg][fill]
L'éditeur de texte
--
<span foreground="red">Indépendant</span>

Vim
Emacs
SublimeText
Notepad++
etc.
--
<span foreground="red">Intégré dans un IDE</span>

Eclipse
Visual Studio
Code::Blocks
GNOME Builder
etc.
-- [text-align=left]
<span foreground="red">Ce qu'on attend d'un éditeur</span>

• coloration syntaxique
• marque-pages
• indentation automatique
• macros
• remplacement de texte
• multi-documents
• sélection rectangulaire
• extensible
-- [toolbox.png][fill][bottom]
+1
--
<b>Bonnes pratiques d'édition :</b>
--
<span foreground="red">Respectez les conventions
du document que vous éditez…</span>
--
<span foreground="red">…ou adoptez les conventions du langage</span>

Python PEP8: <small>https://www.python.org/dev/peps/pep-0008/</small>
-- [text-align=left]
<span foreground="red">Respectez l'indentation</span>

→ configurez votre éditeur !

• facilite la lecture des diffs
• évite l'attribution
-- [programming-languages.jpg][fill]
Langages
--
<span foreground="red">Choix du langage</span>

le plus adapté… parmi ceux que maîtrisez
--
Occasion d'apprendre
un nouveau langage ?
-- [librsvg-logo.png][bottom]
https://git.gnome.org/browse/librsvg/
-- [federico.jpg][fill][bottom-left][text-align=left][shading-opacity=0.000000]
<span foreground="red">C
2001
Federico
XML → bitmap</span>
--
<span foreground="red"><big>Migration C → Rust</big></span>



<small>https://people.gnome.org/~federico/news-2016-10.html#25</small>
--
<span foreground="red">C</span>

langage difficile
gestion mémoire
sécurité (buffer overflow)
-- [text-align=left]
<span foreground="red">C: risques</span>
fichiers mal formés :
→ crash
→ faille de sécurité

<b>Critique en production</b>
--
<span foreground="red">Rust</span>

soutenu par Mozilla et Samsung
utilisé dans Firefox (<span foreground="brown">oxydation</span>, Quantum)
# Mozilla Servo (moteur de rendu, projet de recherche)
# Quantum (merge de Servo dans Gecko) https://wiki.mozilla.org/Quantum

https://www.rust-lang.org/fr/
--
<span foreground="red">Objectifs de Rust</span>

parallélisme
gestion mémoire
# pas de null, pas de ramasse miettes
sécurité
-- [text-align=left]
<tt>fn main() {
    println!("Hello, Rust!");
}</tt>
--
<span foreground="red">Migration → Rust</span>

intégrable dans du code C
migration par morceaux
--
<span foreground="red">« Vous n'avez pas besoin de tout réécrire en une fois.
Je ne connais pas d'autre langage qui permette cela. »</span>

<small><i>Federico Mena Quintero, 2016</i></small>
--
IoT ?
--
<b>Bonnes pratiques de codage :</b>
--
<span foreground="red">Respectez la casse</span>

snake_case
CamelCase
mixedCase
--
<span foreground="red">Respectez le codage (charset)</span>

<tt>printf (<span foreground="violet">"©o®ação = ♥"</span>);</tt>

<big>UTF-8</big> vs <small><s>ISO 8859-1</s></small>
--
<span foreground="red">Écrivez du code portable</span>

<small><i>(essayez)</i></small>

chemins du système de fichiers
# os.path.join()
# g_build_path() via glib
--
<span foreground="red">Respectez la langue</span>

fonctions
variables
commentaires

<big><b>en anglais !</b></big>
-- [text-align=left]
→ plus court
→ plus facile à diffuser (S.O ☺)
→ maintenable
-- [libreoffice-german-comments.png]
LibreOffice
-- [white][libreoffice-origins.png][bottom]
32 ans !
-- [trump.png][fill]
<b>Anglais US</b>
-- [font=monospace 100px][text-align=left]
<span foreground='red' font-weight='bold'>D</span>on't
<span foreground='red' font-weight='bold'>R</span>epeat
<span foreground='red' font-weight='bold'>Y</span>ourself
# générateur de release notes
-- [font=monospace 100px][text-align=left]
<span foreground='red' font-weight='bold'>K</span>eep
<span foreground='red' font-weight='bold'>I</span>t
<span foreground='red' font-weight='bold'>S</span>imple
<span foreground='red' font-weight='bold'>S</span>tupid
# héritage multiple RATP
-- [font=monospace 100px][text-align=left]
<span foreground='red' font-weight='bold'>N</span>ot
<span foreground='red' font-weight='bold'>I</span>nvented
<span foreground='red' font-weight='bold'>H</span>ere
# réimplémenter ses formats de date
# listes chaînées
--
<span foreground="red">Zen of Python</span>

https://www.python.org/dev/peps/pep-0020/
-- [toolbox.png][fill][bottom]
+1
-- [git-branching-model.png][fill]
Systèmes de gestion de version
-- [text-align=left]
Sondage !

✔ CVS
✔ Subversion
✔ Git
✔ Perforce
✔ Mercurial
✔ PVCS
✔ Microsoft SourceSafe
✔ Rationale Synergy
# revision control system (Subversion, git, git-svn, cpold)
--
<span foreground="red">Systèmes centralisés</span>

Serveur HS = intégrateur bloqué
--
<span foreground="red">Systèmes centralisés</span>

Build systems
--
Analyseurs statiques
# analyseurs statiques (*lint, deblint, pylint, coala, shellcheck)
--
<span foreground='red'>Coala</span>

-- [toolbox.png][fill][bottom]
<span foreground="red">Trouvez votre workflow</span>
-- [toolbox.png][fill][bottom]
<span foreground="red">Suivez les bonnes pratiques</span>
--

LICENCE
ne pas copier/coller du code sans connaitre exactement la licence et les droits
libre ne veut pas dire compatible
dwheeler
logiciel libre et licences libres (évoquer SPDX, Creative Commons pour les resources non-code)
--
--
 compilateur/interpréteur
--
 build systems (autotools, CMake, meson)
--
 debogueur (gdb, nemiver; pdb) vs printf
--
 choix d'une licence
--
 bonnes pratiques d'ingéniérie logiciel (joel test)
  --
  --
 bugtracker (bugzilla, mantis, etc.)
--
 toolkits graphiques (Qt, GTK)
--
 frameworks de test unitaires
